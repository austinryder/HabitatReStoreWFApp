#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace HabitatReStoreWFApp.AppData
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Habitat_Restore_V2")]
	public partial class HabitatDataClassesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDonation(Donation instance);
    partial void UpdateDonation(Donation instance);
    partial void DeleteDonation(Donation instance);
    partial void InsertDonation_PickUp_Schedule(Donation_PickUp_Schedule instance);
    partial void UpdateDonation_PickUp_Schedule(Donation_PickUp_Schedule instance);
    partial void DeleteDonation_PickUp_Schedule(Donation_PickUp_Schedule instance);
    partial void InsertDonor(Donor instance);
    partial void UpdateDonor(Donor instance);
    partial void DeleteDonor(Donor instance);
    partial void InsertItem(Item instance);
    partial void UpdateItem(Item instance);
    partial void DeleteItem(Item instance);
    partial void InsertDriver(Driver instance);
    partial void UpdateDriver(Driver instance);
    partial void DeleteDriver(Driver instance);
    partial void InsertItem_Category(Item_Category instance);
    partial void UpdateItem_Category(Item_Category instance);
    partial void DeleteItem_Category(Item_Category instance);
    partial void InsertManager_LogIn(Manager_LogIn instance);
    partial void UpdateManager_LogIn(Manager_LogIn instance);
    partial void DeleteManager_LogIn(Manager_LogIn instance);
    partial void InsertStatus_Entity_Map(Status_Entity_Map instance);
    partial void UpdateStatus_Entity_Map(Status_Entity_Map instance);
    partial void DeleteStatus_Entity_Map(Status_Entity_Map instance);
    partial void InsertStatus_Map(Status_Map instance);
    partial void UpdateStatus_Map(Status_Map instance);
    partial void DeleteStatus_Map(Status_Map instance);
    partial void InsertStore(Store instance);
    partial void UpdateStore(Store instance);
    partial void DeleteStore(Store instance);
    partial void InsertVehicle(Vehicle instance);
    partial void UpdateVehicle(Vehicle instance);
    partial void DeleteVehicle(Vehicle instance);
    partial void InsertVehicle_Size(Vehicle_Size instance);
    partial void UpdateVehicle_Size(Vehicle_Size instance);
    partial void DeleteVehicle_Size(Vehicle_Size instance);
    partial void InsertVehicle_Tracking(Vehicle_Tracking instance);
    partial void UpdateVehicle_Tracking(Vehicle_Tracking instance);
    partial void DeleteVehicle_Tracking(Vehicle_Tracking instance);
    partial void InsertVolunteer(Volunteer instance);
    partial void UpdateVolunteer(Volunteer instance);
    partial void DeleteVolunteer(Volunteer instance);
    partial void InsertVolunteer_Category_Type(Volunteer_Category_Type instance);
    partial void UpdateVolunteer_Category_Type(Volunteer_Category_Type instance);
    partial void DeleteVolunteer_Category_Type(Volunteer_Category_Type instance);
    partial void InsertVolunteer_Schedule(Volunteer_Schedule instance);
    partial void UpdateVolunteer_Schedule(Volunteer_Schedule instance);
    partial void DeleteVolunteer_Schedule(Volunteer_Schedule instance);
    partial void InsertZipCode_Range(ZipCode_Range instance);
    partial void UpdateZipCode_Range(ZipCode_Range instance);
    partial void DeleteZipCode_Range(ZipCode_Range instance);
    #endregion
		
		public HabitatDataClassesDataContext() : 
				base(global::HabitatReStoreWFApp.Properties.Settings.Default.Habitat_Restore_V2ConnectionString2, mappingSource)
		{
			OnCreated();
		}
		
		public HabitatDataClassesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HabitatDataClassesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HabitatDataClassesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HabitatDataClassesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Donation> Donations
		{
			get
			{
				return this.GetTable<Donation>();
			}
		}
		
		public System.Data.Linq.Table<Donation_PickUp_Schedule> Donation_PickUp_Schedules
		{
			get
			{
				return this.GetTable<Donation_PickUp_Schedule>();
			}
		}
		
		public System.Data.Linq.Table<Donor> Donors
		{
			get
			{
				return this.GetTable<Donor>();
			}
		}
		
		public System.Data.Linq.Table<Item> Items
		{
			get
			{
				return this.GetTable<Item>();
			}
		}
		
		public System.Data.Linq.Table<Driver> Drivers
		{
			get
			{
				return this.GetTable<Driver>();
			}
		}
		
		public System.Data.Linq.Table<Item_Category> Item_Categories
		{
			get
			{
				return this.GetTable<Item_Category>();
			}
		}
		
		public System.Data.Linq.Table<Manager_LogIn> Manager_LogIns
		{
			get
			{
				return this.GetTable<Manager_LogIn>();
			}
		}
		
		public System.Data.Linq.Table<Status_Entity_Map> Status_Entity_Maps
		{
			get
			{
				return this.GetTable<Status_Entity_Map>();
			}
		}
		
		public System.Data.Linq.Table<Status_Map> Status_Maps
		{
			get
			{
				return this.GetTable<Status_Map>();
			}
		}
		
		public System.Data.Linq.Table<Store> Stores
		{
			get
			{
				return this.GetTable<Store>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle> Vehicles
		{
			get
			{
				return this.GetTable<Vehicle>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle_Driver> Vehicle_Drivers
		{
			get
			{
				return this.GetTable<Vehicle_Driver>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle_Size> Vehicle_Sizes
		{
			get
			{
				return this.GetTable<Vehicle_Size>();
			}
		}
		
		public System.Data.Linq.Table<Vehicle_Tracking> Vehicle_Trackings
		{
			get
			{
				return this.GetTable<Vehicle_Tracking>();
			}
		}
		
		public System.Data.Linq.Table<Volunteer_Category> Volunteer_Categories
		{
			get
			{
				return this.GetTable<Volunteer_Category>();
			}
		}
		
		public System.Data.Linq.Table<Volunteer> Volunteers
		{
			get
			{
				return this.GetTable<Volunteer>();
			}
		}
		
		public System.Data.Linq.Table<Volunteer_Category_Type> Volunteer_Category_Types
		{
			get
			{
				return this.GetTable<Volunteer_Category_Type>();
			}
		}
		
		public System.Data.Linq.Table<Volunteer_Schedule> Volunteer_Schedules
		{
			get
			{
				return this.GetTable<Volunteer_Schedule>();
			}
		}
		
		public System.Data.Linq.Table<ZipCode_Range> ZipCode_Ranges
		{
			get
			{
				return this.GetTable<ZipCode_Range>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdateDonation")]
		public int usp_UpdateDonation([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Donation_ID", DbType="Int")] System.Nullable<int> donation_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Store_ID", DbType="Int")] System.Nullable<int> store_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status_Map_ID", DbType="Int")] System.Nullable<int> status_Map_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="VarChar(255)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address2", DbType="VarChar(255)")] string address2, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="VarChar(45)")] string city, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="State", DbType="Char(2)")] string state, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZipCode", DbType="VarChar(10)")] string zipCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Bypass_Flag", DbType="Bit")] System.Nullable<bool> bypass_Flag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), donation_ID, store_ID, status_Map_ID, address, address2, city, state, zipCode, bypass_Flag);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_AddVolunteer_Schedule")]
		public int usp_AddVolunteer_Schedule([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Store_ID", DbType="Int")] System.Nullable<int> store_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Volunteer_ID", DbType="Int")] System.Nullable<int> volunteer_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Category_Type_ID", DbType="Int")] System.Nullable<int> category_Type_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sign_In", DbType="DateTime")] System.Nullable<System.DateTime> sign_In, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Sign_Out", DbType="DateTime")] System.Nullable<System.DateTime> sign_Out)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), store_ID, volunteer_ID, category_Type_ID, sign_In, sign_Out);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdateDonation")]
		public int usp_UpdateDonation1([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Donation_ID", DbType="Int")] System.Nullable<int> donation_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Store_ID", DbType="Int")] System.Nullable<int> store_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status_Map_ID", DbType="Int")] System.Nullable<int> status_Map_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="VarChar(255)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address2", DbType="VarChar(255)")] string address2, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="VarChar(45)")] string city, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="State", DbType="Char(2)")] string state, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZipCode", DbType="VarChar(10)")] string zipCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Bypass_Flag", DbType="Bit")] System.Nullable<bool> bypass_Flag)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), donation_ID, store_ID, status_Map_ID, address, address2, city, state, zipCode, bypass_Flag);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdateVolunteer")]
		public int usp_UpdateVolunteer([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Volunteer_ID", DbType="Int")] System.Nullable<int> volunteer_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Status_Map_ID", DbType="Int")] System.Nullable<int> status_Map_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Last_Name", DbType="VarChar(45)")] string last_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="First_Name", DbType="VarChar(45)")] string first_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Middle_Name", DbType="VarChar(45)")] string middle_Name, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Gender", DbType="Char(1)")] System.Nullable<char> gender, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="DOB", DbType="Date")] System.Nullable<System.DateTime> dOB, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="SSN", DbType="NChar(9)")] string sSN, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address", DbType="VarChar(255)")] string address, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Address2", DbType="VarChar(255)")] string address2, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="City", DbType="VarChar(45)")] string city, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="State", DbType="Char(2)")] string state, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ZipCode", DbType="VarChar(10)")] string zipCode, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Phone", DbType="VarChar(10)")] string phone, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Email", DbType="VarChar(255)")] string email)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), volunteer_ID, status_Map_ID, last_Name, first_Name, middle_Name, gender, dOB, sSN, address, address2, city, state, zipCode, phone, email);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_UpdateItem")]
		public int usp_UpdateItem([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_ID", DbType="Int")] System.Nullable<int> item_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Donation_ID", DbType="Int")] System.Nullable<int> donation_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Item_Category_ID", DbType="Int")] System.Nullable<int> item_Category_ID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Donation_Image", DbType="VarBinary(MAX)")] System.Data.Linq.Binary donation_Image, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="Description", DbType="VarChar(255)")] string description)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), item_ID, donation_ID, item_Category_ID, donation_Image, description);
			return ((int)(result.ReturnValue));
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.usp_ReportPickUpByStore")]
		public ISingleResult<Donation_PickUp_Schedule> usp_ReportPickUpByStore([global::System.Data.Linq.Mapping.ParameterAttribute(Name="StoreID", DbType="Int")] System.Nullable<int> storeID, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="PickUpDate", DbType="Date")] System.Nullable<System.DateTime> pickUpDate)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), storeID, pickUpDate);
			return ((ISingleResult<Donation_PickUp_Schedule>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Donation")]
	public partial class Donation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Donation_ID;
		
		private int _Store_ID;
		
		private int _Donor_ID;
		
		private int _Status_Map_ID;
		
		private string _Address;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _ZipCode;
		
		private bool _Bypass_Flag;
		
		private EntityRef<Donation_PickUp_Schedule> _Donation_PickUp_Schedule;
		
		private EntitySet<Item> _Items;
		
		private EntityRef<Donor> _Donor;
		
		private EntityRef<Status_Map> _Status_Map;
		
		private EntityRef<Store> _Store;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonation_IDChanging(int value);
    partial void OnDonation_IDChanged();
    partial void OnStore_IDChanging(int value);
    partial void OnStore_IDChanged();
    partial void OnDonor_IDChanging(int value);
    partial void OnDonor_IDChanged();
    partial void OnStatus_Map_IDChanging(int value);
    partial void OnStatus_Map_IDChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnBypass_FlagChanging(bool value);
    partial void OnBypass_FlagChanged();
    #endregion
		
		public Donation()
		{
			this._Donation_PickUp_Schedule = default(EntityRef<Donation_PickUp_Schedule>);
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			this._Donor = default(EntityRef<Donor>);
			this._Status_Map = default(EntityRef<Status_Map>);
			this._Store = default(EntityRef<Store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Donation_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Donation_ID
		{
			get
			{
				return this._Donation_ID;
			}
			set
			{
				if ((this._Donation_ID != value))
				{
					this.OnDonation_IDChanging(value);
					this.SendPropertyChanging();
					this._Donation_ID = value;
					this.SendPropertyChanged("Donation_ID");
					this.OnDonation_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Store_ID", DbType="Int NOT NULL")]
		public int Store_ID
		{
			get
			{
				return this._Store_ID;
			}
			set
			{
				if ((this._Store_ID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStore_IDChanging(value);
					this.SendPropertyChanging();
					this._Store_ID = value;
					this.SendPropertyChanged("Store_ID");
					this.OnStore_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Donor_ID", DbType="Int NOT NULL")]
		public int Donor_ID
		{
			get
			{
				return this._Donor_ID;
			}
			set
			{
				if ((this._Donor_ID != value))
				{
					if (this._Donor.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonor_IDChanging(value);
					this.SendPropertyChanging();
					this._Donor_ID = value;
					this.SendPropertyChanged("Donor_ID");
					this.OnDonor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_Map_ID", DbType="Int NOT NULL")]
		public int Status_Map_ID
		{
			get
			{
				return this._Status_Map_ID;
			}
			set
			{
				if ((this._Status_Map_ID != value))
				{
					if (this._Status_Map.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatus_Map_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_Map_ID = value;
					this.SendPropertyChanged("Status_Map_ID");
					this.OnStatus_Map_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(255)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Bypass_Flag", DbType="Bit NOT NULL")]
		public bool Bypass_Flag
		{
			get
			{
				return this._Bypass_Flag;
			}
			set
			{
				if ((this._Bypass_Flag != value))
				{
					this.OnBypass_FlagChanging(value);
					this.SendPropertyChanging();
					this._Bypass_Flag = value;
					this.SendPropertyChanged("Bypass_Flag");
					this.OnBypass_FlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Donation_Donation_PickUp_Schedule", Storage="_Donation_PickUp_Schedule", ThisKey="Donation_ID", OtherKey="Donation_ID", IsUnique=true, IsForeignKey=false)]
		public Donation_PickUp_Schedule Donation_PickUp_Schedule
		{
			get
			{
				return this._Donation_PickUp_Schedule.Entity;
			}
			set
			{
				Donation_PickUp_Schedule previousValue = this._Donation_PickUp_Schedule.Entity;
				if (((previousValue != value) 
							|| (this._Donation_PickUp_Schedule.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Donation_PickUp_Schedule.Entity = null;
						previousValue.Donation = null;
					}
					this._Donation_PickUp_Schedule.Entity = value;
					if ((value != null))
					{
						value.Donation = this;
					}
					this.SendPropertyChanged("Donation_PickUp_Schedule");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Donation_Item", Storage="_Items", ThisKey="Donation_ID", OtherKey="Donation_ID")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Donor_Donation", Storage="_Donor", ThisKey="Donor_ID", OtherKey="Donor_ID", IsForeignKey=true)]
		public Donor Donor
		{
			get
			{
				return this._Donor.Entity;
			}
			set
			{
				Donor previousValue = this._Donor.Entity;
				if (((previousValue != value) 
							|| (this._Donor.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Donor.Entity = null;
						previousValue.Donations.Remove(this);
					}
					this._Donor.Entity = value;
					if ((value != null))
					{
						value.Donations.Add(this);
						this._Donor_ID = value.Donor_ID;
					}
					else
					{
						this._Donor_ID = default(int);
					}
					this.SendPropertyChanged("Donor");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Map_Donation", Storage="_Status_Map", ThisKey="Status_Map_ID", OtherKey="Status_Map_ID", IsForeignKey=true)]
		public Status_Map Status_Map
		{
			get
			{
				return this._Status_Map.Entity;
			}
			set
			{
				Status_Map previousValue = this._Status_Map.Entity;
				if (((previousValue != value) 
							|| (this._Status_Map.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status_Map.Entity = null;
						previousValue.Donations.Remove(this);
					}
					this._Status_Map.Entity = value;
					if ((value != null))
					{
						value.Donations.Add(this);
						this._Status_Map_ID = value.Status_Map_ID;
					}
					else
					{
						this._Status_Map_ID = default(int);
					}
					this.SendPropertyChanged("Status_Map");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Donation", Storage="_Store", ThisKey="Store_ID", OtherKey="Store_ID", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.Donations.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.Donations.Add(this);
						this._Store_ID = value.Store_ID;
					}
					else
					{
						this._Store_ID = default(int);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Donation = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Donation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Donation_PickUp_Schedule")]
	public partial class Donation_PickUp_Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Donation_ID;
		
		private System.DateTime _PickUp_Window_Start;
		
		private System.DateTime _PickUp_Window_End;
		
		private string _Special_Instructions;
		
		private bool _Completed;
		
		private System.Nullable<System.DateTime> _Completed_Time;
		
		private EntityRef<Donation> _Donation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonation_IDChanging(int value);
    partial void OnDonation_IDChanged();
    partial void OnPickUp_Window_StartChanging(System.DateTime value);
    partial void OnPickUp_Window_StartChanged();
    partial void OnPickUp_Window_EndChanging(System.DateTime value);
    partial void OnPickUp_Window_EndChanged();
    partial void OnSpecial_InstructionsChanging(string value);
    partial void OnSpecial_InstructionsChanged();
    partial void OnCompletedChanging(bool value);
    partial void OnCompletedChanged();
    partial void OnCompleted_TimeChanging(System.Nullable<System.DateTime> value);
    partial void OnCompleted_TimeChanged();
    #endregion
		
		public Donation_PickUp_Schedule()
		{
			this._Donation = default(EntityRef<Donation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Donation_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Donation_ID
		{
			get
			{
				return this._Donation_ID;
			}
			set
			{
				if ((this._Donation_ID != value))
				{
					if (this._Donation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonation_IDChanging(value);
					this.SendPropertyChanging();
					this._Donation_ID = value;
					this.SendPropertyChanged("Donation_ID");
					this.OnDonation_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickUp_Window_Start", DbType="DateTime NOT NULL")]
		public System.DateTime PickUp_Window_Start
		{
			get
			{
				return this._PickUp_Window_Start;
			}
			set
			{
				if ((this._PickUp_Window_Start != value))
				{
					this.OnPickUp_Window_StartChanging(value);
					this.SendPropertyChanging();
					this._PickUp_Window_Start = value;
					this.SendPropertyChanged("PickUp_Window_Start");
					this.OnPickUp_Window_StartChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PickUp_Window_End", DbType="DateTime NOT NULL")]
		public System.DateTime PickUp_Window_End
		{
			get
			{
				return this._PickUp_Window_End;
			}
			set
			{
				if ((this._PickUp_Window_End != value))
				{
					this.OnPickUp_Window_EndChanging(value);
					this.SendPropertyChanging();
					this._PickUp_Window_End = value;
					this.SendPropertyChanged("PickUp_Window_End");
					this.OnPickUp_Window_EndChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Special_Instructions", DbType="VarChar(2047)")]
		public string Special_Instructions
		{
			get
			{
				return this._Special_Instructions;
			}
			set
			{
				if ((this._Special_Instructions != value))
				{
					this.OnSpecial_InstructionsChanging(value);
					this.SendPropertyChanging();
					this._Special_Instructions = value;
					this.SendPropertyChanged("Special_Instructions");
					this.OnSpecial_InstructionsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed", DbType="Bit NOT NULL")]
		public bool Completed
		{
			get
			{
				return this._Completed;
			}
			set
			{
				if ((this._Completed != value))
				{
					this.OnCompletedChanging(value);
					this.SendPropertyChanging();
					this._Completed = value;
					this.SendPropertyChanged("Completed");
					this.OnCompletedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Completed_Time", DbType="DateTime")]
		public System.Nullable<System.DateTime> Completed_Time
		{
			get
			{
				return this._Completed_Time;
			}
			set
			{
				if ((this._Completed_Time != value))
				{
					this.OnCompleted_TimeChanging(value);
					this.SendPropertyChanging();
					this._Completed_Time = value;
					this.SendPropertyChanged("Completed_Time");
					this.OnCompleted_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Donation_Donation_PickUp_Schedule", Storage="_Donation", ThisKey="Donation_ID", OtherKey="Donation_ID", IsForeignKey=true)]
		public Donation Donation
		{
			get
			{
				return this._Donation.Entity;
			}
			set
			{
				Donation previousValue = this._Donation.Entity;
				if (((previousValue != value) 
							|| (this._Donation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Donation.Entity = null;
						previousValue.Donation_PickUp_Schedule = null;
					}
					this._Donation.Entity = value;
					if ((value != null))
					{
						value.Donation_PickUp_Schedule = this;
						this._Donation_ID = value.Donation_ID;
					}
					else
					{
						this._Donation_ID = default(int);
					}
					this.SendPropertyChanged("Donation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Donor")]
	public partial class Donor : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Donor_ID;
		
		private int _Status_Map_ID;
		
		private string _Last_Name;
		
		private string _First_Name;
		
		private string _Middle_Name;
		
		private System.Nullable<char> _Gender;
		
		private string _Address;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _ZipCode;
		
		private string _Phone;
		
		private string _Email;
		
		private EntitySet<Donation> _Donations;
		
		private EntityRef<Status_Map> _Status_Map;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDonor_IDChanging(int value);
    partial void OnDonor_IDChanged();
    partial void OnStatus_Map_IDChanging(int value);
    partial void OnStatus_Map_IDChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnMiddle_NameChanging(string value);
    partial void OnMiddle_NameChanged();
    partial void OnGenderChanging(System.Nullable<char> value);
    partial void OnGenderChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Donor()
		{
			this._Donations = new EntitySet<Donation>(new Action<Donation>(this.attach_Donations), new Action<Donation>(this.detach_Donations));
			this._Status_Map = default(EntityRef<Status_Map>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Donor_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Donor_ID
		{
			get
			{
				return this._Donor_ID;
			}
			set
			{
				if ((this._Donor_ID != value))
				{
					this.OnDonor_IDChanging(value);
					this.SendPropertyChanging();
					this._Donor_ID = value;
					this.SendPropertyChanged("Donor_ID");
					this.OnDonor_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_Map_ID", DbType="Int NOT NULL")]
		public int Status_Map_ID
		{
			get
			{
				return this._Status_Map_ID;
			}
			set
			{
				if ((this._Status_Map_ID != value))
				{
					if (this._Status_Map.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatus_Map_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_Map_ID = value;
					this.SendPropertyChanged("Status_Map_ID");
					this.OnStatus_Map_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middle_Name", DbType="VarChar(45)")]
		public string Middle_Name
		{
			get
			{
				return this._Middle_Name;
			}
			set
			{
				if ((this._Middle_Name != value))
				{
					this.OnMiddle_NameChanging(value);
					this.SendPropertyChanging();
					this._Middle_Name = value;
					this.SendPropertyChanged("Middle_Name");
					this.OnMiddle_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1)")]
		public System.Nullable<char> Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(255)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Donor_Donation", Storage="_Donations", ThisKey="Donor_ID", OtherKey="Donor_ID")]
		public EntitySet<Donation> Donations
		{
			get
			{
				return this._Donations;
			}
			set
			{
				this._Donations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Map_Donor", Storage="_Status_Map", ThisKey="Status_Map_ID", OtherKey="Status_Map_ID", IsForeignKey=true)]
		public Status_Map Status_Map
		{
			get
			{
				return this._Status_Map.Entity;
			}
			set
			{
				Status_Map previousValue = this._Status_Map.Entity;
				if (((previousValue != value) 
							|| (this._Status_Map.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status_Map.Entity = null;
						previousValue.Donors.Remove(this);
					}
					this._Status_Map.Entity = value;
					if ((value != null))
					{
						value.Donors.Add(this);
						this._Status_Map_ID = value.Status_Map_ID;
					}
					else
					{
						this._Status_Map_ID = default(int);
					}
					this.SendPropertyChanged("Status_Map");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Donations(Donation entity)
		{
			this.SendPropertyChanging();
			entity.Donor = this;
		}
		
		private void detach_Donations(Donation entity)
		{
			this.SendPropertyChanging();
			entity.Donor = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item")]
	public partial class Item : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item_ID;
		
		private int _Donation_ID;
		
		private int _Item_Category_ID;
		
		private System.Data.Linq.Binary _Donation_Image;
		
		private string _Description;
		
		private EntityRef<Donation> _Donation;
		
		private EntityRef<Item_Category> _Item_Category;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_IDChanging(int value);
    partial void OnItem_IDChanged();
    partial void OnDonation_IDChanging(int value);
    partial void OnDonation_IDChanged();
    partial void OnItem_Category_IDChanging(int value);
    partial void OnItem_Category_IDChanged();
    partial void OnDonation_ImageChanging(System.Data.Linq.Binary value);
    partial void OnDonation_ImageChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Item()
		{
			this._Donation = default(EntityRef<Donation>);
			this._Item_Category = default(EntityRef<Item_Category>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Item_ID
		{
			get
			{
				return this._Item_ID;
			}
			set
			{
				if ((this._Item_ID != value))
				{
					this.OnItem_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_ID = value;
					this.SendPropertyChanged("Item_ID");
					this.OnItem_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Donation_ID", DbType="Int NOT NULL")]
		public int Donation_ID
		{
			get
			{
				return this._Donation_ID;
			}
			set
			{
				if ((this._Donation_ID != value))
				{
					if (this._Donation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDonation_IDChanging(value);
					this.SendPropertyChanging();
					this._Donation_ID = value;
					this.SendPropertyChanged("Donation_ID");
					this.OnDonation_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Category_ID", DbType="Int NOT NULL")]
		public int Item_Category_ID
		{
			get
			{
				return this._Item_Category_ID;
			}
			set
			{
				if ((this._Item_Category_ID != value))
				{
					if (this._Item_Category.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnItem_Category_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_Category_ID = value;
					this.SendPropertyChanged("Item_Category_ID");
					this.OnItem_Category_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Donation_Image", DbType="VarBinary(MAX)", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Donation_Image
		{
			get
			{
				return this._Donation_Image;
			}
			set
			{
				if ((this._Donation_Image != value))
				{
					this.OnDonation_ImageChanging(value);
					this.SendPropertyChanging();
					this._Donation_Image = value;
					this.SendPropertyChanged("Donation_Image");
					this.OnDonation_ImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Donation_Item", Storage="_Donation", ThisKey="Donation_ID", OtherKey="Donation_ID", IsForeignKey=true)]
		public Donation Donation
		{
			get
			{
				return this._Donation.Entity;
			}
			set
			{
				Donation previousValue = this._Donation.Entity;
				if (((previousValue != value) 
							|| (this._Donation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Donation.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Donation.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._Donation_ID = value.Donation_ID;
					}
					else
					{
						this._Donation_ID = default(int);
					}
					this.SendPropertyChanged("Donation");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Category_Item", Storage="_Item_Category", ThisKey="Item_Category_ID", OtherKey="Item_Category_ID", IsForeignKey=true)]
		public Item_Category Item_Category
		{
			get
			{
				return this._Item_Category.Entity;
			}
			set
			{
				Item_Category previousValue = this._Item_Category.Entity;
				if (((previousValue != value) 
							|| (this._Item_Category.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Item_Category.Entity = null;
						previousValue.Items.Remove(this);
					}
					this._Item_Category.Entity = value;
					if ((value != null))
					{
						value.Items.Add(this);
						this._Item_Category_ID = value.Item_Category_ID;
					}
					else
					{
						this._Item_Category_ID = default(int);
					}
					this.SendPropertyChanged("Item_Category");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Driver")]
	public partial class Driver : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Driver_ID;
		
		private int _Status_Map_ID;
		
		private string _Last_Name;
		
		private string _First_Name;
		
		private string _Middle_Name;
		
		private char _Gender;
		
		private string _SSN;
		
		private string _Address;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip_Code;
		
		private string _Phone;
		
		private string _Email;
		
		private EntityRef<Status_Map> _Status_Map;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnDriver_IDChanging(int value);
    partial void OnDriver_IDChanged();
    partial void OnStatus_Map_IDChanging(int value);
    partial void OnStatus_Map_IDChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnMiddle_NameChanging(string value);
    partial void OnMiddle_NameChanged();
    partial void OnGenderChanging(char value);
    partial void OnGenderChanged();
    partial void OnSSNChanging(string value);
    partial void OnSSNChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZip_CodeChanging(string value);
    partial void OnZip_CodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Driver()
		{
			this._Status_Map = default(EntityRef<Status_Map>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Driver_ID
		{
			get
			{
				return this._Driver_ID;
			}
			set
			{
				if ((this._Driver_ID != value))
				{
					this.OnDriver_IDChanging(value);
					this.SendPropertyChanging();
					this._Driver_ID = value;
					this.SendPropertyChanged("Driver_ID");
					this.OnDriver_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_Map_ID", DbType="Int NOT NULL")]
		public int Status_Map_ID
		{
			get
			{
				return this._Status_Map_ID;
			}
			set
			{
				if ((this._Status_Map_ID != value))
				{
					if (this._Status_Map.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatus_Map_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_Map_ID = value;
					this.SendPropertyChanged("Status_Map_ID");
					this.OnStatus_Map_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middle_Name", DbType="VarChar(45)")]
		public string Middle_Name
		{
			get
			{
				return this._Middle_Name;
			}
			set
			{
				if ((this._Middle_Name != value))
				{
					this.OnMiddle_NameChanging(value);
					this.SendPropertyChanging();
					this._Middle_Name = value;
					this.SendPropertyChanged("Middle_Name");
					this.OnMiddle_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1) NOT NULL")]
		public char Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSN", DbType="NChar(9) NOT NULL", CanBeNull=false)]
		public string SSN
		{
			get
			{
				return this._SSN;
			}
			set
			{
				if ((this._SSN != value))
				{
					this.OnSSNChanging(value);
					this.SendPropertyChanging();
					this._SSN = value;
					this.SendPropertyChanged("SSN");
					this.OnSSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(255)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Zip_Code
		{
			get
			{
				return this._Zip_Code;
			}
			set
			{
				if ((this._Zip_Code != value))
				{
					this.OnZip_CodeChanging(value);
					this.SendPropertyChanging();
					this._Zip_Code = value;
					this.SendPropertyChanged("Zip_Code");
					this.OnZip_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Map_Driver", Storage="_Status_Map", ThisKey="Status_Map_ID", OtherKey="Status_Map_ID", IsForeignKey=true)]
		public Status_Map Status_Map
		{
			get
			{
				return this._Status_Map.Entity;
			}
			set
			{
				Status_Map previousValue = this._Status_Map.Entity;
				if (((previousValue != value) 
							|| (this._Status_Map.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status_Map.Entity = null;
						previousValue.Drivers.Remove(this);
					}
					this._Status_Map.Entity = value;
					if ((value != null))
					{
						value.Drivers.Add(this);
						this._Status_Map_ID = value.Status_Map_ID;
					}
					else
					{
						this._Status_Map_ID = default(int);
					}
					this.SendPropertyChanged("Status_Map");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Item_Category")]
	public partial class Item_Category : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Item_Category_ID;
		
		private string _Description;
		
		private EntitySet<Item> _Items;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnItem_Category_IDChanging(int value);
    partial void OnItem_Category_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Item_Category()
		{
			this._Items = new EntitySet<Item>(new Action<Item>(this.attach_Items), new Action<Item>(this.detach_Items));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Item_Category_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Item_Category_ID
		{
			get
			{
				return this._Item_Category_ID;
			}
			set
			{
				if ((this._Item_Category_ID != value))
				{
					this.OnItem_Category_IDChanging(value);
					this.SendPropertyChanging();
					this._Item_Category_ID = value;
					this.SendPropertyChanged("Item_Category_ID");
					this.OnItem_Category_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Item_Category_Item", Storage="_Items", ThisKey="Item_Category_ID", OtherKey="Item_Category_ID")]
		public EntitySet<Item> Items
		{
			get
			{
				return this._Items;
			}
			set
			{
				this._Items.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Item_Category = this;
		}
		
		private void detach_Items(Item entity)
		{
			this.SendPropertyChanging();
			entity.Item_Category = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manager_LogIn")]
	public partial class Manager_LogIn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _User_ID;
		
		private string _UserName;
		
		private string _Password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUser_IDChanging(int value);
    partial void OnUser_IDChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public Manager_LogIn()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int User_ID
		{
			get
			{
				return this._User_ID;
			}
			set
			{
				if ((this._User_ID != value))
				{
					this.OnUser_IDChanging(value);
					this.SendPropertyChanging();
					this._User_ID = value;
					this.SendPropertyChanged("User_ID");
					this.OnUser_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserName", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status_Entity_Map")]
	public partial class Status_Entity_Map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Status_Entity_ID;
		
		private string _Entity_Name;
		
		private EntitySet<Status_Map> _Status_Maps;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatus_Entity_IDChanging(int value);
    partial void OnStatus_Entity_IDChanged();
    partial void OnEntity_NameChanging(string value);
    partial void OnEntity_NameChanged();
    #endregion
		
		public Status_Entity_Map()
		{
			this._Status_Maps = new EntitySet<Status_Map>(new Action<Status_Map>(this.attach_Status_Maps), new Action<Status_Map>(this.detach_Status_Maps));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_Entity_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Status_Entity_ID
		{
			get
			{
				return this._Status_Entity_ID;
			}
			set
			{
				if ((this._Status_Entity_ID != value))
				{
					this.OnStatus_Entity_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_Entity_ID = value;
					this.SendPropertyChanged("Status_Entity_ID");
					this.OnStatus_Entity_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Entity_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Entity_Name
		{
			get
			{
				return this._Entity_Name;
			}
			set
			{
				if ((this._Entity_Name != value))
				{
					this.OnEntity_NameChanging(value);
					this.SendPropertyChanging();
					this._Entity_Name = value;
					this.SendPropertyChanged("Entity_Name");
					this.OnEntity_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Entity_Map_Status_Map", Storage="_Status_Maps", ThisKey="Status_Entity_ID", OtherKey="Status_Entity_ID")]
		public EntitySet<Status_Map> Status_Maps
		{
			get
			{
				return this._Status_Maps;
			}
			set
			{
				this._Status_Maps.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Status_Maps(Status_Map entity)
		{
			this.SendPropertyChanging();
			entity.Status_Entity_Map = this;
		}
		
		private void detach_Status_Maps(Status_Map entity)
		{
			this.SendPropertyChanging();
			entity.Status_Entity_Map = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Status_Map")]
	public partial class Status_Map : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Status_Map_ID;
		
		private int _Status_Entity_ID;
		
		private string _Description;
		
		private EntitySet<Donation> _Donations;
		
		private EntitySet<Donor> _Donors;
		
		private EntitySet<Driver> _Drivers;
		
		private EntitySet<Volunteer> _Volunteers;
		
		private EntityRef<Status_Entity_Map> _Status_Entity_Map;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStatus_Map_IDChanging(int value);
    partial void OnStatus_Map_IDChanged();
    partial void OnStatus_Entity_IDChanging(int value);
    partial void OnStatus_Entity_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Status_Map()
		{
			this._Donations = new EntitySet<Donation>(new Action<Donation>(this.attach_Donations), new Action<Donation>(this.detach_Donations));
			this._Donors = new EntitySet<Donor>(new Action<Donor>(this.attach_Donors), new Action<Donor>(this.detach_Donors));
			this._Drivers = new EntitySet<Driver>(new Action<Driver>(this.attach_Drivers), new Action<Driver>(this.detach_Drivers));
			this._Volunteers = new EntitySet<Volunteer>(new Action<Volunteer>(this.attach_Volunteers), new Action<Volunteer>(this.detach_Volunteers));
			this._Status_Entity_Map = default(EntityRef<Status_Entity_Map>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_Map_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Status_Map_ID
		{
			get
			{
				return this._Status_Map_ID;
			}
			set
			{
				if ((this._Status_Map_ID != value))
				{
					this.OnStatus_Map_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_Map_ID = value;
					this.SendPropertyChanged("Status_Map_ID");
					this.OnStatus_Map_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_Entity_ID", DbType="Int NOT NULL")]
		public int Status_Entity_ID
		{
			get
			{
				return this._Status_Entity_ID;
			}
			set
			{
				if ((this._Status_Entity_ID != value))
				{
					if (this._Status_Entity_Map.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatus_Entity_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_Entity_ID = value;
					this.SendPropertyChanged("Status_Entity_ID");
					this.OnStatus_Entity_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Map_Donation", Storage="_Donations", ThisKey="Status_Map_ID", OtherKey="Status_Map_ID")]
		public EntitySet<Donation> Donations
		{
			get
			{
				return this._Donations;
			}
			set
			{
				this._Donations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Map_Donor", Storage="_Donors", ThisKey="Status_Map_ID", OtherKey="Status_Map_ID")]
		public EntitySet<Donor> Donors
		{
			get
			{
				return this._Donors;
			}
			set
			{
				this._Donors.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Map_Driver", Storage="_Drivers", ThisKey="Status_Map_ID", OtherKey="Status_Map_ID")]
		public EntitySet<Driver> Drivers
		{
			get
			{
				return this._Drivers;
			}
			set
			{
				this._Drivers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Map_Volunteer", Storage="_Volunteers", ThisKey="Status_Map_ID", OtherKey="Status_Map_ID")]
		public EntitySet<Volunteer> Volunteers
		{
			get
			{
				return this._Volunteers;
			}
			set
			{
				this._Volunteers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Entity_Map_Status_Map", Storage="_Status_Entity_Map", ThisKey="Status_Entity_ID", OtherKey="Status_Entity_ID", IsForeignKey=true)]
		public Status_Entity_Map Status_Entity_Map
		{
			get
			{
				return this._Status_Entity_Map.Entity;
			}
			set
			{
				Status_Entity_Map previousValue = this._Status_Entity_Map.Entity;
				if (((previousValue != value) 
							|| (this._Status_Entity_Map.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status_Entity_Map.Entity = null;
						previousValue.Status_Maps.Remove(this);
					}
					this._Status_Entity_Map.Entity = value;
					if ((value != null))
					{
						value.Status_Maps.Add(this);
						this._Status_Entity_ID = value.Status_Entity_ID;
					}
					else
					{
						this._Status_Entity_ID = default(int);
					}
					this.SendPropertyChanged("Status_Entity_Map");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Donations(Donation entity)
		{
			this.SendPropertyChanging();
			entity.Status_Map = this;
		}
		
		private void detach_Donations(Donation entity)
		{
			this.SendPropertyChanging();
			entity.Status_Map = null;
		}
		
		private void attach_Donors(Donor entity)
		{
			this.SendPropertyChanging();
			entity.Status_Map = this;
		}
		
		private void detach_Donors(Donor entity)
		{
			this.SendPropertyChanging();
			entity.Status_Map = null;
		}
		
		private void attach_Drivers(Driver entity)
		{
			this.SendPropertyChanging();
			entity.Status_Map = this;
		}
		
		private void detach_Drivers(Driver entity)
		{
			this.SendPropertyChanging();
			entity.Status_Map = null;
		}
		
		private void attach_Volunteers(Volunteer entity)
		{
			this.SendPropertyChanging();
			entity.Status_Map = this;
		}
		
		private void detach_Volunteers(Volunteer entity)
		{
			this.SendPropertyChanging();
			entity.Status_Map = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Store")]
	public partial class Store : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Store_ID;
		
		private string _Name;
		
		private string _Address;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _ZipCode;
		
		private string _Phone;
		
		private EntitySet<Donation> _Donations;
		
		private EntitySet<Vehicle> _Vehicles;
		
		private EntitySet<Volunteer_Schedule> _Volunteer_Schedules;
		
		private EntitySet<ZipCode_Range> _ZipCode_Ranges;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnStore_IDChanging(int value);
    partial void OnStore_IDChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    #endregion
		
		public Store()
		{
			this._Donations = new EntitySet<Donation>(new Action<Donation>(this.attach_Donations), new Action<Donation>(this.detach_Donations));
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			this._Volunteer_Schedules = new EntitySet<Volunteer_Schedule>(new Action<Volunteer_Schedule>(this.attach_Volunteer_Schedules), new Action<Volunteer_Schedule>(this.detach_Volunteer_Schedules));
			this._ZipCode_Ranges = new EntitySet<ZipCode_Range>(new Action<ZipCode_Range>(this.attach_ZipCode_Ranges), new Action<ZipCode_Range>(this.detach_ZipCode_Ranges));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Store_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Store_ID
		{
			get
			{
				return this._Store_ID;
			}
			set
			{
				if ((this._Store_ID != value))
				{
					this.OnStore_IDChanging(value);
					this.SendPropertyChanging();
					this._Store_ID = value;
					this.SendPropertyChanged("Store_ID");
					this.OnStore_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(255)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Donation", Storage="_Donations", ThisKey="Store_ID", OtherKey="Store_ID")]
		public EntitySet<Donation> Donations
		{
			get
			{
				return this._Donations;
			}
			set
			{
				this._Donations.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Vehicle", Storage="_Vehicles", ThisKey="Store_ID", OtherKey="Store_ID")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Volunteer_Schedule", Storage="_Volunteer_Schedules", ThisKey="Store_ID", OtherKey="Store_ID")]
		public EntitySet<Volunteer_Schedule> Volunteer_Schedules
		{
			get
			{
				return this._Volunteer_Schedules;
			}
			set
			{
				this._Volunteer_Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_ZipCode_Range", Storage="_ZipCode_Ranges", ThisKey="Store_ID", OtherKey="Store_ID")]
		public EntitySet<ZipCode_Range> ZipCode_Ranges
		{
			get
			{
				return this._ZipCode_Ranges;
			}
			set
			{
				this._ZipCode_Ranges.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Donations(Donation entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_Donations(Donation entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
		
		private void attach_Volunteer_Schedules(Volunteer_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_Volunteer_Schedules(Volunteer_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
		
		private void attach_ZipCode_Ranges(ZipCode_Range entity)
		{
			this.SendPropertyChanging();
			entity.Store = this;
		}
		
		private void detach_ZipCode_Ranges(ZipCode_Range entity)
		{
			this.SendPropertyChanging();
			entity.Store = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle")]
	public partial class Vehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Vehicle_ID;
		
		private int _Store_ID;
		
		private int _Vehicle_Size_ID;
		
		private System.Nullable<decimal> _Mileage;
		
		private System.Nullable<decimal> _Next_Maintenance;
		
		private EntitySet<Vehicle_Tracking> _Vehicle_Trackings;
		
		private EntityRef<Store> _Store;
		
		private EntityRef<Vehicle_Size> _Vehicle_Size;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehicle_IDChanging(int value);
    partial void OnVehicle_IDChanged();
    partial void OnStore_IDChanging(int value);
    partial void OnStore_IDChanged();
    partial void OnVehicle_Size_IDChanging(int value);
    partial void OnVehicle_Size_IDChanged();
    partial void OnMileageChanging(System.Nullable<decimal> value);
    partial void OnMileageChanged();
    partial void OnNext_MaintenanceChanging(System.Nullable<decimal> value);
    partial void OnNext_MaintenanceChanged();
    #endregion
		
		public Vehicle()
		{
			this._Vehicle_Trackings = new EntitySet<Vehicle_Tracking>(new Action<Vehicle_Tracking>(this.attach_Vehicle_Trackings), new Action<Vehicle_Tracking>(this.detach_Vehicle_Trackings));
			this._Store = default(EntityRef<Store>);
			this._Vehicle_Size = default(EntityRef<Vehicle_Size>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Vehicle_ID
		{
			get
			{
				return this._Vehicle_ID;
			}
			set
			{
				if ((this._Vehicle_ID != value))
				{
					this.OnVehicle_IDChanging(value);
					this.SendPropertyChanging();
					this._Vehicle_ID = value;
					this.SendPropertyChanged("Vehicle_ID");
					this.OnVehicle_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Store_ID", DbType="Int NOT NULL")]
		public int Store_ID
		{
			get
			{
				return this._Store_ID;
			}
			set
			{
				if ((this._Store_ID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStore_IDChanging(value);
					this.SendPropertyChanging();
					this._Store_ID = value;
					this.SendPropertyChanged("Store_ID");
					this.OnStore_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle_Size_ID", DbType="Int NOT NULL")]
		public int Vehicle_Size_ID
		{
			get
			{
				return this._Vehicle_Size_ID;
			}
			set
			{
				if ((this._Vehicle_Size_ID != value))
				{
					if (this._Vehicle_Size.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicle_Size_IDChanging(value);
					this.SendPropertyChanging();
					this._Vehicle_Size_ID = value;
					this.SendPropertyChanged("Vehicle_Size_ID");
					this.OnVehicle_Size_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="Decimal(8,1)")]
		public System.Nullable<decimal> Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this.OnMileageChanging(value);
					this.SendPropertyChanging();
					this._Mileage = value;
					this.SendPropertyChanged("Mileage");
					this.OnMileageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Next_Maintenance", DbType="Decimal(8,1)")]
		public System.Nullable<decimal> Next_Maintenance
		{
			get
			{
				return this._Next_Maintenance;
			}
			set
			{
				if ((this._Next_Maintenance != value))
				{
					this.OnNext_MaintenanceChanging(value);
					this.SendPropertyChanging();
					this._Next_Maintenance = value;
					this.SendPropertyChanged("Next_Maintenance");
					this.OnNext_MaintenanceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Vehicle_Tracking", Storage="_Vehicle_Trackings", ThisKey="Vehicle_ID", OtherKey="Vehicle_ID")]
		public EntitySet<Vehicle_Tracking> Vehicle_Trackings
		{
			get
			{
				return this._Vehicle_Trackings;
			}
			set
			{
				this._Vehicle_Trackings.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Vehicle", Storage="_Store", ThisKey="Store_ID", OtherKey="Store_ID", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._Store_ID = value.Store_ID;
					}
					else
					{
						this._Store_ID = default(int);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Size_Vehicle", Storage="_Vehicle_Size", ThisKey="Vehicle_Size_ID", OtherKey="Vehicle_Size_ID", IsForeignKey=true)]
		public Vehicle_Size Vehicle_Size
		{
			get
			{
				return this._Vehicle_Size.Entity;
			}
			set
			{
				Vehicle_Size previousValue = this._Vehicle_Size.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle_Size.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle_Size.Entity = null;
						previousValue.Vehicles.Remove(this);
					}
					this._Vehicle_Size.Entity = value;
					if ((value != null))
					{
						value.Vehicles.Add(this);
						this._Vehicle_Size_ID = value.Vehicle_Size_ID;
					}
					else
					{
						this._Vehicle_Size_ID = default(int);
					}
					this.SendPropertyChanged("Vehicle_Size");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vehicle_Trackings(Vehicle_Tracking entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = this;
		}
		
		private void detach_Vehicle_Trackings(Vehicle_Tracking entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle_Driver")]
	public partial class Vehicle_Driver
	{
		
		private int _Vehicle_ID;
		
		private int _Driver_ID;
		
		private System.DateTime _Time_In;
		
		private System.Nullable<System.DateTime> _Time_Out;
		
		public Vehicle_Driver()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle_ID", DbType="Int NOT NULL")]
		public int Vehicle_ID
		{
			get
			{
				return this._Vehicle_ID;
			}
			set
			{
				if ((this._Vehicle_ID != value))
				{
					this._Vehicle_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Driver_ID", DbType="Int NOT NULL")]
		public int Driver_ID
		{
			get
			{
				return this._Driver_ID;
			}
			set
			{
				if ((this._Driver_ID != value))
				{
					this._Driver_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_In", DbType="DateTime NOT NULL")]
		public System.DateTime Time_In
		{
			get
			{
				return this._Time_In;
			}
			set
			{
				if ((this._Time_In != value))
				{
					this._Time_In = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Time_Out", DbType="DateTime")]
		public System.Nullable<System.DateTime> Time_Out
		{
			get
			{
				return this._Time_Out;
			}
			set
			{
				if ((this._Time_Out != value))
				{
					this._Time_Out = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle_Size")]
	public partial class Vehicle_Size : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Vehicle_Size_ID;
		
		private string _Description;
		
		private System.Nullable<decimal> _Volume;
		
		private EntitySet<Vehicle> _Vehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehicle_Size_IDChanging(int value);
    partial void OnVehicle_Size_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnVolumeChanging(System.Nullable<decimal> value);
    partial void OnVolumeChanged();
    #endregion
		
		public Vehicle_Size()
		{
			this._Vehicles = new EntitySet<Vehicle>(new Action<Vehicle>(this.attach_Vehicles), new Action<Vehicle>(this.detach_Vehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle_Size_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Vehicle_Size_ID
		{
			get
			{
				return this._Vehicle_Size_ID;
			}
			set
			{
				if ((this._Vehicle_Size_ID != value))
				{
					this.OnVehicle_Size_IDChanging(value);
					this.SendPropertyChanging();
					this._Vehicle_Size_ID = value;
					this.SendPropertyChanged("Vehicle_Size_ID");
					this.OnVehicle_Size_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volume", DbType="Decimal(6,1)")]
		public System.Nullable<decimal> Volume
		{
			get
			{
				return this._Volume;
			}
			set
			{
				if ((this._Volume != value))
				{
					this.OnVolumeChanging(value);
					this.SendPropertyChanging();
					this._Volume = value;
					this.SendPropertyChanged("Volume");
					this.OnVolumeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Size_Vehicle", Storage="_Vehicles", ThisKey="Vehicle_Size_ID", OtherKey="Vehicle_Size_ID")]
		public EntitySet<Vehicle> Vehicles
		{
			get
			{
				return this._Vehicles;
			}
			set
			{
				this._Vehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle_Size = this;
		}
		
		private void detach_Vehicles(Vehicle entity)
		{
			this.SendPropertyChanging();
			entity.Vehicle_Size = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Vehicle_Tracking")]
	public partial class Vehicle_Tracking : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Vehicle_Tracking_ID;
		
		private int _Vehicle_ID;
		
		private decimal _GPS_Lat;
		
		private decimal _GPS_Long;
		
		private System.DateTime _GPS_Time;
		
		private EntityRef<Vehicle> _Vehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehicle_Tracking_IDChanging(int value);
    partial void OnVehicle_Tracking_IDChanged();
    partial void OnVehicle_IDChanging(int value);
    partial void OnVehicle_IDChanged();
    partial void OnGPS_LatChanging(decimal value);
    partial void OnGPS_LatChanged();
    partial void OnGPS_LongChanging(decimal value);
    partial void OnGPS_LongChanged();
    partial void OnGPS_TimeChanging(System.DateTime value);
    partial void OnGPS_TimeChanged();
    #endregion
		
		public Vehicle_Tracking()
		{
			this._Vehicle = default(EntityRef<Vehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle_Tracking_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Vehicle_Tracking_ID
		{
			get
			{
				return this._Vehicle_Tracking_ID;
			}
			set
			{
				if ((this._Vehicle_Tracking_ID != value))
				{
					this.OnVehicle_Tracking_IDChanging(value);
					this.SendPropertyChanging();
					this._Vehicle_Tracking_ID = value;
					this.SendPropertyChanged("Vehicle_Tracking_ID");
					this.OnVehicle_Tracking_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle_ID", DbType="Int NOT NULL")]
		public int Vehicle_ID
		{
			get
			{
				return this._Vehicle_ID;
			}
			set
			{
				if ((this._Vehicle_ID != value))
				{
					if (this._Vehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicle_IDChanging(value);
					this.SendPropertyChanging();
					this._Vehicle_ID = value;
					this.SendPropertyChanged("Vehicle_ID");
					this.OnVehicle_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPS_Lat", DbType="Decimal(9,6) NOT NULL")]
		public decimal GPS_Lat
		{
			get
			{
				return this._GPS_Lat;
			}
			set
			{
				if ((this._GPS_Lat != value))
				{
					this.OnGPS_LatChanging(value);
					this.SendPropertyChanging();
					this._GPS_Lat = value;
					this.SendPropertyChanged("GPS_Lat");
					this.OnGPS_LatChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPS_Long", DbType="Decimal(9,6) NOT NULL")]
		public decimal GPS_Long
		{
			get
			{
				return this._GPS_Long;
			}
			set
			{
				if ((this._GPS_Long != value))
				{
					this.OnGPS_LongChanging(value);
					this.SendPropertyChanging();
					this._GPS_Long = value;
					this.SendPropertyChanged("GPS_Long");
					this.OnGPS_LongChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GPS_Time", DbType="DateTime NOT NULL")]
		public System.DateTime GPS_Time
		{
			get
			{
				return this._GPS_Time;
			}
			set
			{
				if ((this._GPS_Time != value))
				{
					this.OnGPS_TimeChanging(value);
					this.SendPropertyChanging();
					this._GPS_Time = value;
					this.SendPropertyChanged("GPS_Time");
					this.OnGPS_TimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Vehicle_Vehicle_Tracking", Storage="_Vehicle", ThisKey="Vehicle_ID", OtherKey="Vehicle_ID", IsForeignKey=true)]
		public Vehicle Vehicle
		{
			get
			{
				return this._Vehicle.Entity;
			}
			set
			{
				Vehicle previousValue = this._Vehicle.Entity;
				if (((previousValue != value) 
							|| (this._Vehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Vehicle.Entity = null;
						previousValue.Vehicle_Trackings.Remove(this);
					}
					this._Vehicle.Entity = value;
					if ((value != null))
					{
						value.Vehicle_Trackings.Add(this);
						this._Vehicle_ID = value.Vehicle_ID;
					}
					else
					{
						this._Vehicle_ID = default(int);
					}
					this.SendPropertyChanged("Vehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Volunteer_Category")]
	public partial class Volunteer_Category
	{
		
		private int _Volunteer_ID;
		
		private int _Category_Type_ID;
		
		public Volunteer_Category()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volunteer_ID", DbType="Int NOT NULL")]
		public int Volunteer_ID
		{
			get
			{
				return this._Volunteer_ID;
			}
			set
			{
				if ((this._Volunteer_ID != value))
				{
					this._Volunteer_ID = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Type_ID", DbType="Int NOT NULL")]
		public int Category_Type_ID
		{
			get
			{
				return this._Category_Type_ID;
			}
			set
			{
				if ((this._Category_Type_ID != value))
				{
					this._Category_Type_ID = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Volunteer")]
	public partial class Volunteer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Volunteer_ID;
		
		private int _Status_Map_ID;
		
		private string _Last_Name;
		
		private string _First_Name;
		
		private string _Middle_Name;
		
		private char _Gender;
		
		private System.DateTime _DOB;
		
		private string _SSN;
		
		private string _Address;
		
		private string _Address2;
		
		private string _City;
		
		private string _State;
		
		private string _Zip_Code;
		
		private string _Phone;
		
		private string _Email;
		
		private EntitySet<Volunteer_Schedule> _Volunteer_Schedules;
		
		private EntityRef<Status_Map> _Status_Map;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVolunteer_IDChanging(int value);
    partial void OnVolunteer_IDChanged();
    partial void OnStatus_Map_IDChanging(int value);
    partial void OnStatus_Map_IDChanged();
    partial void OnLast_NameChanging(string value);
    partial void OnLast_NameChanged();
    partial void OnFirst_NameChanging(string value);
    partial void OnFirst_NameChanged();
    partial void OnMiddle_NameChanging(string value);
    partial void OnMiddle_NameChanged();
    partial void OnGenderChanging(char value);
    partial void OnGenderChanged();
    partial void OnDOBChanging(System.DateTime value);
    partial void OnDOBChanged();
    partial void OnSSNChanging(string value);
    partial void OnSSNChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnAddress2Changing(string value);
    partial void OnAddress2Changed();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZip_CodeChanging(string value);
    partial void OnZip_CodeChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    #endregion
		
		public Volunteer()
		{
			this._Volunteer_Schedules = new EntitySet<Volunteer_Schedule>(new Action<Volunteer_Schedule>(this.attach_Volunteer_Schedules), new Action<Volunteer_Schedule>(this.detach_Volunteer_Schedules));
			this._Status_Map = default(EntityRef<Status_Map>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volunteer_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Volunteer_ID
		{
			get
			{
				return this._Volunteer_ID;
			}
			set
			{
				if ((this._Volunteer_ID != value))
				{
					this.OnVolunteer_IDChanging(value);
					this.SendPropertyChanging();
					this._Volunteer_ID = value;
					this.SendPropertyChanged("Volunteer_ID");
					this.OnVolunteer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status_Map_ID", DbType="Int NOT NULL")]
		public int Status_Map_ID
		{
			get
			{
				return this._Status_Map_ID;
			}
			set
			{
				if ((this._Status_Map_ID != value))
				{
					if (this._Status_Map.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStatus_Map_IDChanging(value);
					this.SendPropertyChanging();
					this._Status_Map_ID = value;
					this.SendPropertyChanged("Status_Map_ID");
					this.OnStatus_Map_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Last_Name", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string Last_Name
		{
			get
			{
				return this._Last_Name;
			}
			set
			{
				if ((this._Last_Name != value))
				{
					this.OnLast_NameChanging(value);
					this.SendPropertyChanging();
					this._Last_Name = value;
					this.SendPropertyChanged("Last_Name");
					this.OnLast_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_First_Name", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string First_Name
		{
			get
			{
				return this._First_Name;
			}
			set
			{
				if ((this._First_Name != value))
				{
					this.OnFirst_NameChanging(value);
					this.SendPropertyChanging();
					this._First_Name = value;
					this.SendPropertyChanged("First_Name");
					this.OnFirst_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Middle_Name", DbType="VarChar(45)")]
		public string Middle_Name
		{
			get
			{
				return this._Middle_Name;
			}
			set
			{
				if ((this._Middle_Name != value))
				{
					this.OnMiddle_NameChanging(value);
					this.SendPropertyChanging();
					this._Middle_Name = value;
					this.SendPropertyChanged("Middle_Name");
					this.OnMiddle_NameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="Char(1) NOT NULL")]
		public char Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DOB", DbType="Date NOT NULL")]
		public System.DateTime DOB
		{
			get
			{
				return this._DOB;
			}
			set
			{
				if ((this._DOB != value))
				{
					this.OnDOBChanging(value);
					this.SendPropertyChanging();
					this._DOB = value;
					this.SendPropertyChanged("DOB");
					this.OnDOBChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SSN", DbType="NChar(9)")]
		public string SSN
		{
			get
			{
				return this._SSN;
			}
			set
			{
				if ((this._SSN != value))
				{
					this.OnSSNChanging(value);
					this.SendPropertyChanging();
					this._SSN = value;
					this.SendPropertyChanged("SSN");
					this.OnSSNChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address2", DbType="VarChar(255)")]
		public string Address2
		{
			get
			{
				return this._Address2;
			}
			set
			{
				if ((this._Address2 != value))
				{
					this.OnAddress2Changing(value);
					this.SendPropertyChanging();
					this._Address2 = value;
					this.SendPropertyChanged("Address2");
					this.OnAddress2Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(45) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="Char(2) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip_Code", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Zip_Code
		{
			get
			{
				return this._Zip_Code;
			}
			set
			{
				if ((this._Zip_Code != value))
				{
					this.OnZip_CodeChanging(value);
					this.SendPropertyChanging();
					this._Zip_Code = value;
					this.SendPropertyChanged("Zip_Code");
					this.OnZip_CodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(255)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_Volunteer_Schedule", Storage="_Volunteer_Schedules", ThisKey="Volunteer_ID", OtherKey="Volunteer_ID")]
		public EntitySet<Volunteer_Schedule> Volunteer_Schedules
		{
			get
			{
				return this._Volunteer_Schedules;
			}
			set
			{
				this._Volunteer_Schedules.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Status_Map_Volunteer", Storage="_Status_Map", ThisKey="Status_Map_ID", OtherKey="Status_Map_ID", IsForeignKey=true)]
		public Status_Map Status_Map
		{
			get
			{
				return this._Status_Map.Entity;
			}
			set
			{
				Status_Map previousValue = this._Status_Map.Entity;
				if (((previousValue != value) 
							|| (this._Status_Map.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Status_Map.Entity = null;
						previousValue.Volunteers.Remove(this);
					}
					this._Status_Map.Entity = value;
					if ((value != null))
					{
						value.Volunteers.Add(this);
						this._Status_Map_ID = value.Status_Map_ID;
					}
					else
					{
						this._Status_Map_ID = default(int);
					}
					this.SendPropertyChanged("Status_Map");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Volunteer_Schedules(Volunteer_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Volunteer = this;
		}
		
		private void detach_Volunteer_Schedules(Volunteer_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Volunteer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Volunteer_Category_Type")]
	public partial class Volunteer_Category_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Category_Type_ID;
		
		private string _Description;
		
		private EntitySet<Volunteer_Schedule> _Volunteer_Schedules;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCategory_Type_IDChanging(int value);
    partial void OnCategory_Type_IDChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    #endregion
		
		public Volunteer_Category_Type()
		{
			this._Volunteer_Schedules = new EntitySet<Volunteer_Schedule>(new Action<Volunteer_Schedule>(this.attach_Volunteer_Schedules), new Action<Volunteer_Schedule>(this.detach_Volunteer_Schedules));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Type_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Category_Type_ID
		{
			get
			{
				return this._Category_Type_ID;
			}
			set
			{
				if ((this._Category_Type_ID != value))
				{
					this.OnCategory_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Category_Type_ID = value;
					this.SendPropertyChanged("Category_Type_ID");
					this.OnCategory_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_Category_Type_Volunteer_Schedule", Storage="_Volunteer_Schedules", ThisKey="Category_Type_ID", OtherKey="Category_Type_ID")]
		public EntitySet<Volunteer_Schedule> Volunteer_Schedules
		{
			get
			{
				return this._Volunteer_Schedules;
			}
			set
			{
				this._Volunteer_Schedules.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Volunteer_Schedules(Volunteer_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Volunteer_Category_Type = this;
		}
		
		private void detach_Volunteer_Schedules(Volunteer_Schedule entity)
		{
			this.SendPropertyChanging();
			entity.Volunteer_Category_Type = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Volunteer_Schedule")]
	public partial class Volunteer_Schedule : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Volunteer_Schedule_ID;
		
		private int _Store_ID;
		
		private int _Volunteer_ID;
		
		private int _Category_Type_ID;
		
		private System.DateTime _Sign_In;
		
		private System.Nullable<System.DateTime> _Sign_Out;
		
		private EntityRef<Volunteer_Category_Type> _Volunteer_Category_Type;
		
		private EntityRef<Store> _Store;
		
		private EntityRef<Volunteer> _Volunteer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVolunteer_Schedule_IDChanging(int value);
    partial void OnVolunteer_Schedule_IDChanged();
    partial void OnStore_IDChanging(int value);
    partial void OnStore_IDChanged();
    partial void OnVolunteer_IDChanging(int value);
    partial void OnVolunteer_IDChanged();
    partial void OnCategory_Type_IDChanging(int value);
    partial void OnCategory_Type_IDChanged();
    partial void OnSign_InChanging(System.DateTime value);
    partial void OnSign_InChanged();
    partial void OnSign_OutChanging(System.Nullable<System.DateTime> value);
    partial void OnSign_OutChanged();
    #endregion
		
		public Volunteer_Schedule()
		{
			this._Volunteer_Category_Type = default(EntityRef<Volunteer_Category_Type>);
			this._Store = default(EntityRef<Store>);
			this._Volunteer = default(EntityRef<Volunteer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volunteer_Schedule_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Volunteer_Schedule_ID
		{
			get
			{
				return this._Volunteer_Schedule_ID;
			}
			set
			{
				if ((this._Volunteer_Schedule_ID != value))
				{
					this.OnVolunteer_Schedule_IDChanging(value);
					this.SendPropertyChanging();
					this._Volunteer_Schedule_ID = value;
					this.SendPropertyChanged("Volunteer_Schedule_ID");
					this.OnVolunteer_Schedule_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Store_ID", DbType="Int NOT NULL")]
		public int Store_ID
		{
			get
			{
				return this._Store_ID;
			}
			set
			{
				if ((this._Store_ID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStore_IDChanging(value);
					this.SendPropertyChanging();
					this._Store_ID = value;
					this.SendPropertyChanged("Store_ID");
					this.OnStore_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Volunteer_ID", DbType="Int NOT NULL")]
		public int Volunteer_ID
		{
			get
			{
				return this._Volunteer_ID;
			}
			set
			{
				if ((this._Volunteer_ID != value))
				{
					if (this._Volunteer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVolunteer_IDChanging(value);
					this.SendPropertyChanging();
					this._Volunteer_ID = value;
					this.SendPropertyChanged("Volunteer_ID");
					this.OnVolunteer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category_Type_ID", DbType="Int NOT NULL")]
		public int Category_Type_ID
		{
			get
			{
				return this._Category_Type_ID;
			}
			set
			{
				if ((this._Category_Type_ID != value))
				{
					if (this._Volunteer_Category_Type.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCategory_Type_IDChanging(value);
					this.SendPropertyChanging();
					this._Category_Type_ID = value;
					this.SendPropertyChanged("Category_Type_ID");
					this.OnCategory_Type_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sign_In", DbType="DateTime NOT NULL")]
		public System.DateTime Sign_In
		{
			get
			{
				return this._Sign_In;
			}
			set
			{
				if ((this._Sign_In != value))
				{
					this.OnSign_InChanging(value);
					this.SendPropertyChanging();
					this._Sign_In = value;
					this.SendPropertyChanged("Sign_In");
					this.OnSign_InChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sign_Out", DbType="DateTime")]
		public System.Nullable<System.DateTime> Sign_Out
		{
			get
			{
				return this._Sign_Out;
			}
			set
			{
				if ((this._Sign_Out != value))
				{
					this.OnSign_OutChanging(value);
					this.SendPropertyChanging();
					this._Sign_Out = value;
					this.SendPropertyChanged("Sign_Out");
					this.OnSign_OutChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_Category_Type_Volunteer_Schedule", Storage="_Volunteer_Category_Type", ThisKey="Category_Type_ID", OtherKey="Category_Type_ID", IsForeignKey=true)]
		public Volunteer_Category_Type Volunteer_Category_Type
		{
			get
			{
				return this._Volunteer_Category_Type.Entity;
			}
			set
			{
				Volunteer_Category_Type previousValue = this._Volunteer_Category_Type.Entity;
				if (((previousValue != value) 
							|| (this._Volunteer_Category_Type.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Volunteer_Category_Type.Entity = null;
						previousValue.Volunteer_Schedules.Remove(this);
					}
					this._Volunteer_Category_Type.Entity = value;
					if ((value != null))
					{
						value.Volunteer_Schedules.Add(this);
						this._Category_Type_ID = value.Category_Type_ID;
					}
					else
					{
						this._Category_Type_ID = default(int);
					}
					this.SendPropertyChanged("Volunteer_Category_Type");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_Volunteer_Schedule", Storage="_Store", ThisKey="Store_ID", OtherKey="Store_ID", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.Volunteer_Schedules.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.Volunteer_Schedules.Add(this);
						this._Store_ID = value.Store_ID;
					}
					else
					{
						this._Store_ID = default(int);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Volunteer_Volunteer_Schedule", Storage="_Volunteer", ThisKey="Volunteer_ID", OtherKey="Volunteer_ID", IsForeignKey=true)]
		public Volunteer Volunteer
		{
			get
			{
				return this._Volunteer.Entity;
			}
			set
			{
				Volunteer previousValue = this._Volunteer.Entity;
				if (((previousValue != value) 
							|| (this._Volunteer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Volunteer.Entity = null;
						previousValue.Volunteer_Schedules.Remove(this);
					}
					this._Volunteer.Entity = value;
					if ((value != null))
					{
						value.Volunteer_Schedules.Add(this);
						this._Volunteer_ID = value.Volunteer_ID;
					}
					else
					{
						this._Volunteer_ID = default(int);
					}
					this.SendPropertyChanged("Volunteer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ZipCode_Range")]
	public partial class ZipCode_Range : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Zip_Code_Range_ID;
		
		private int _Store_ID;
		
		private string _ZipCode;
		
		private EntityRef<Store> _Store;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnZip_Code_Range_IDChanging(int value);
    partial void OnZip_Code_Range_IDChanged();
    partial void OnStore_IDChanging(int value);
    partial void OnStore_IDChanged();
    partial void OnZipCodeChanging(string value);
    partial void OnZipCodeChanged();
    #endregion
		
		public ZipCode_Range()
		{
			this._Store = default(EntityRef<Store>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip_Code_Range_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Zip_Code_Range_ID
		{
			get
			{
				return this._Zip_Code_Range_ID;
			}
			set
			{
				if ((this._Zip_Code_Range_ID != value))
				{
					this.OnZip_Code_Range_IDChanging(value);
					this.SendPropertyChanging();
					this._Zip_Code_Range_ID = value;
					this.SendPropertyChanged("Zip_Code_Range_ID");
					this.OnZip_Code_Range_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Store_ID", DbType="Int NOT NULL")]
		public int Store_ID
		{
			get
			{
				return this._Store_ID;
			}
			set
			{
				if ((this._Store_ID != value))
				{
					if (this._Store.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnStore_IDChanging(value);
					this.SendPropertyChanging();
					this._Store_ID = value;
					this.SendPropertyChanged("Store_ID");
					this.OnStore_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ZipCode", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string ZipCode
		{
			get
			{
				return this._ZipCode;
			}
			set
			{
				if ((this._ZipCode != value))
				{
					this.OnZipCodeChanging(value);
					this.SendPropertyChanging();
					this._ZipCode = value;
					this.SendPropertyChanged("ZipCode");
					this.OnZipCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Store_ZipCode_Range", Storage="_Store", ThisKey="Store_ID", OtherKey="Store_ID", IsForeignKey=true)]
		public Store Store
		{
			get
			{
				return this._Store.Entity;
			}
			set
			{
				Store previousValue = this._Store.Entity;
				if (((previousValue != value) 
							|| (this._Store.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Store.Entity = null;
						previousValue.ZipCode_Ranges.Remove(this);
					}
					this._Store.Entity = value;
					if ((value != null))
					{
						value.ZipCode_Ranges.Add(this);
						this._Store_ID = value.Store_ID;
					}
					else
					{
						this._Store_ID = default(int);
					}
					this.SendPropertyChanged("Store");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
